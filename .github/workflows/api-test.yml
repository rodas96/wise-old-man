name: (API) Continuous Integration

on:
  push:
    branches:
      - feature/paralel-testing
    paths:
      - "server/**"

jobs:
  discover-tests:
    name: Discover Integration Test Files
    runs-on: ubuntu-latest
    outputs:
      testFiles: ${{ steps.set-matrix.outputs.testFiles }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find Test Files
        id: set-matrix
        run: |
          TEST_FILES=$(find server/__tests__/suites/integration -type f -name "*.test.ts" | sed 's|.*/||' | sed 's/\.test\.ts//' | jq -R -s -c 'split("\n")[:-1]')
          echo "Found test files: $TEST_FILES"
          echo "testFiles=$TEST_FILES" >> $GITHUB_OUTPUT

  test:
    needs: discover-tests
    name: Run Test - ${{ matrix.testFiles }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        testFiles: ${{ fromJson(needs.discover-tests.outputs.testFiles) }}
    defaults:
      run:
        working-directory: ./server
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.16.0

      - name: Install dependencies
        run: npm ci

      - name: Set Test Name (DB & Execution)
        run: |
          TEST_NAME="${{ matrix.testFiles }}"
          echo "TEST_NAME=$TEST_NAME" >> $GITHUB_ENV
          echo "DB_NAME=testdb_${{ matrix.testFiles }}" >> $GITHUB_ENV
          echo "REDIS_HOST=localhost" >> $GITHUB_ENV
          echo "REDIS_PORT=6379" >> $GITHUB_ENV

      - name: Wait for Redis to be Ready
        run: |
          echo "Waiting for Redis to be ready..."
          for i in {1..10}; do
            if redis-cli -h $REDIS_HOST -p $REDIS_PORT ping | grep -q "PONG"; then
              echo "Redis is up!"
              exit 0
            fi
            echo "Redis is not ready yet... retrying in 3s"
            sleep 3
          done
          echo "Redis failed to start."
          exit 1

      - name: Set Database URL
        run: echo "CORE_DATABASE_URL=postgresql://postgres:postgres@localhost:5432/$DB_NAME" >> $GITHUB_ENV

      - name: Create Test Database
        run: |
          PGPASSWORD=postgres psql -U postgres -h localhost -p 5432 -c "CREATE DATABASE $DB_NAME;"

      - name: Run Integration Test
        run: npm run test $TEST_NAME

  type-check-client-js:
    name: Type-check Client JS package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.16.0

      - name: Install server dependencies
        run: cd server && npm ci

      - name: Install client-js dependencies
        run: cd client-js && npm ci

      - name: Build & Type Check
        run: cd client-js && npm run build
